{
	"ReportFilename": "LTReport",
	"ReportMask":      "02012006",
	//Загрузка отчета на конфлюенс
	"ReportConfluenceOn": true,
	//Адрес конфлюенса
	"ReportConfluenceURL":"https://confluence.com/",
	"ReportConfluenceId":"926291954",
	"ReportConfluenceSpace":"space",
	"ReportConfluenceLogin":"login",
    "ReportConfluencePass":"pass",
	//авторизация по токену
	"ReportConfluenceToken":"token",
	"ReportConfluenceProxy":"",
	//Настройки для FSM
	ReportIM" :{
		"User" : "",
		"Pass": "",
		"Token" : "",
		"Type": 1,    "LoginFSM" :     "string",
		"PassFSM" :   	 "string",
		"FSMConnect": 	 "fsm.ru",
		"FSMTU":      	 "string"
	},
	//Настройки для ClickHouse
	"ClickHouse" : {
		"Server" : "localhost:1234"
		"User" : "stress_test",
		"Pass" : "",
		"Token" : ""
		"Query" : [
			{ "sql" : "",
			  "dbname" : "",
			  "name": "" },
			{ "sql" : "",
			  "dbname" : "",
			  "name": "" }
		]
	},
	"ReportOn": { 
			//Включить отчет из Jmeter
			"ReportJmeter": true,
            //Включить отчет из FSM
			"ReportIM": true,
            //Включить отчет по Сценариям
			"ReportScenario": true,
            //Включить отчет по дашбордам
			"ReportDash": true,
			"ClickHouse": false
			},
	"JmeterInflux" :   "http://10.10.10.1:8086",
	"LoginInflux" :   "",
	"PassInflux" :    "",
	"JmeterQuery":    "SELECT mean(\"rate\"), mean(\"avg\"), mean(\"errpct\"), percentile(\"avg\", 95), max(\"avg\"), percentile(\"avg\", 50) FROM \"delta\" WHERE ",
	"JmeterQueryGroup": "GROUP BY \"suite\", time(1d) fill(0)",
	//Описание столбцов
	"JmeterQueryField": [
			{"Name": "Rate", "Description": "Averagate rate %d ops"},
			{"Name": "Avg", "Description":"Average latency %d ms"},
			{"Name": "ErrorPercent", "Description":"Error %d %%" },
			{"Name": "Percentile", "Description":"Percentile latency %d ms" },
			{"Name": "Maxlatency", "Description":"Max latency %d ms" },
			{"Name": "Percentile50", "Description":"Percentile 50 %d ms" }
		],
	"JmeterQueryThreshold":     [
			{"Name":"oapi-get", "ErrorField":"ErrorPercent", "Threshold": 20, "Description": "The error is higher %d in test %s current %d"}, 
			{"Name":"oapi-get", "ErrorField":"Maxlatency", "Threshold": 400, "Description": "The latency is higher %d ms in test %s current %d ms"}, 
			{"Name":"*", "ErrorField":"Percentile50", "Threshold": 400, "Description": "The Percentile50 latency is higher %d ms in test %s current %d ms"}, 
			{"Name":"cam", "ErrorField":"ErrorPercent","Threshold": 50, "Description": "The error is higher %d in test %s current %d"}, 
			{"Name":"ccmp_ro_cc_oper", "ErrorField":"ErrorPercent","Threshold": 40, "Description": "The error is higher %d in test %s current %d"}
		],
	// Тестовые сценари пер тест с порогами
	"JmeterQueryThreshold":     [
			{"Name":"oapi-get", "ErrorField":"ErrorPercent", "Threshold": 3, "Description": "The error is higher %d in test %s current %d"}, 
			{"Name":"oapi-get", "ErrorField":"Maxlatency", "Threshold": 400, "Description": "The error is higher %d in test %s current %d"}, 
			{"Name":"cam", "ErrorField":"ErrorPercent","Threshold": 50, "Description": "The error is higher %d in test %s current %d"}, 
			{"Name":"ccmp_ro_cc_oper", "ErrorField":"ErrorPercent","Threshold": 40, "Description": "The error is higher %d in test %s current %d"}
	],
	"JmeterQueryScenario": "SELECT max(\"pct90.0\"), max(\"max\"), mean(\"count\") FROM \"details\" WHERE ",
	"JmeterQueryScnrGroup": " GROUP BY time(1d), \"application\", \"transaction\", \"statut\" fill(0) ORDER BY time DESC",
	"JmeterQueryScnrField": [
			{"Name": "Percentile90", "Description": "Percentile90 latency %d ms"},
			{"Name": "Maxlatency", "Description":"Max latency %d ms"},
			{"Name": "Rate", "Description":"Averagate rate %d ops"}
		],
	"JmeterQueryScnrThreshold":     [
			{"Name":"oapi_get","NameThread":"getToken", "ErrorField":"Percentile90", "Threshold": 5, "Statut":"ok", "Description": "The high latency %d ms in scenario %s current %d ms"}, 
			{"Name":"oapi_get","NameThread":"*", "ErrorField":"Percentile90", "Threshold": 100, "Statut":"ok", "Description": "The high latency %d ms in scenario %s current %d ms"}, 
			{"Name":"oapi_get","NameThread":"getTokenForSCC", "ErrorField":"Percentile90", "Threshold": 20, "Statut":"ok", "Description": "The high latency %d ms in scenario %s current %d ms"},
			{"Name":"oapi_get","NameThread":"getTokenForSCC", "ErrorField":"Rate", "Threshold": 10, "Statut":"ko", "Description": "The rate count is higher %d ops in scenario %s current %d ops"}
		],
	"GrafanaDash":
		[
			{"Name":     "ESB CPU",
            // ссылка на даш
			 "UrlDash":  "https://grafana.ru/d/000000879/wf?orgId=1&refresh=5m",
             // авторизация на графане
			 "AuthHeader":"Bearer Hash=",
			 // ссылка на панель
             "UrlPanel": "",
             // Ссылка на картинку в графане. Время from to не указвать, она формируется в скрипте
			 "UrlImg":   "https://grafana.ru/render/d-solo/000000879/wf?height=500&orgId=1&panelId=88&refresh=5m&tz=Europe%2FMoscow&width=1000",
			 // запрос данных для даша
             "Query":    "SELECT percentile(\"usage_active\",95) FROM \"ret_30w\".\"cpu\" WHERE (\"host\" =~ /sib-oapi-krf[0-2]{1}[0-9]{1}/ AND \"cpu\" = 'cpu-total') " ,
			 // SourceType: 1 телеграф, 2 прометеус 
			 // ссылка на запрос данных, смотреть в графане
             "UrlQuery": "https://grafana.ru/api/datasources/proxy/459/query?db=telegraf&q=",
			 // группировка
             "UrlQueryGroup":"GROUP BY time(1d) fill(none)",
             // Порог для запроса
             "Threshold": 90,
             // Описание порога
			 "ThDescription": "CPU jopa",
             // размер картинки в pdf
             "Size": {"Width": 120, "Height": 50}
			}
		],
		"GrafanadashTemplate":
		[
			{"Name":     "ESB CPU",
            // ссылка на даш
			 "UrlDash":  "https://grafana.ru/d/000000879/wf?orgId=1&refresh=5m",
             // авторизация на графане
			 "AuthHeader":"Bearer Hash=",
			 // ссылка на панель
             "UrlPanel": "",
             // Ссылка на картинку в графане. Время from to не указвать, она формируется в скрипте
			 "UrlImg":   "https://grafana.ru/render/d-solo/000000879/wf?height=500&orgId=1&panelId=88&refresh=5m&tz=Europe%2FMoscow&width=1000",
			 // запрос данных для даша
             "Query":    "SELECT percentile(\"usage_active\",95) FROM \"ret_30w\".\"cpu\" WHERE (\"host\" =~ /sib-oapi-krf[0-2]{1}[0-9]{1}/ AND \"cpu\" = 'cpu-total') " ,
			 // SourceType: 1 телеграф, 2 прометеус, graphite-api
			 // ссылка на запрос данных, смотреть в графане
             "UrlQuery": "https://grafana.ru/api/datasources/proxy/459/query?db=telegraf&q=",
			 // группировка
             "UrlQueryGroup":"GROUP BY time(1d) fill(none)",
             // Порог для запроса
             "Threshold": 90,
             // Описание порога
			 "ThDescription": "CPU jopa",
             // размер картинки в pdf
             "Size": {"Width": 120, "Height": 50},
			 // Добавлять график только при срабатывании порога
			 "ThresholdFilter": true,
			 // Имя Файла и шаблон
			 "FileList": "1.csv",
			 "FilePettern": "server;name"
			}
		]
}